<?php
include_once('obb_search_opensearch.inc');
/**
* Implements hook_theme().
*/
function obb_search_carousel_theme($existing, $type, $theme, $path) {
 $theme = array();
 $theme['node__obb_search_carousel'] = array(
   'render element' => 'content',
   'base hook' => 'node',
   'template' => 'templates/obb_search_carousel',
   //'file' => 'obb_search_carousel.theme.inc',
  );
  
 
 return $theme;
}
function obb_search_carousel_menu() {
   $items = array();
   $items['admin/settings/obb_search_carousel'] = array(
    'title' => 'OC Overwrites',
    'description' => 'Configuration af oc digitalpost modul',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('obb_search_carousel_settings_admin_form'),
    'access arguments' => array('administer obb_search_carousel'),
    'file' => 'obb_search_carousel.admin.inc'
   );
   
    $items['obb/carousel/ajax/load/%/%/%/%/%'] = array(
     'page callback' => 'obb_search_carousel_ajax_load_items', // Render HTML
     'description' => 'ajax load of material preview',
     'page arguments' => array(4,5,6,7,8),
     'type' => MENU_CALLBACK,
     'access arguments' => array('access content'),
   );
  
   return $items;
}
/**
 * Implements hook_permission().
 */
function obb_search_carousel_permission() {
  return array(
    'administer obb_search_carousel' => array(
      'title' => t('Administrer obb search carousel'),
      'description' => t('Giver adgang til configuere obb  search carousel'),
    )
  );
}
/*
 * Hook to pre-process node to make the node type display as carousel.
 */
function obb_search_carousel_preprocess_node(&$variables, $hook) {
   if ($variables['type'] == 'obb_search_carousel') {
       ini_set('max_execution_time', 3000); //300 seconds = 5 minutes
       /*
        * create the carousel
        */
       if($cached = cache_get('obb-carousel-view-'.$variables['nid'], 'cache_obb_search_carousel'))  {
         $variables['carousel'] = render($cached->data); //we render to get js included..optimize ?
         return;
       }
       $search_collections = isset($variables['field_searches']['und']) ? $variables['field_searches']['und'] : $variables['field_searches'];
       $block = obb_search_carousel_build_render_array($search_collections,$variables['nid']);
     // $variables['carousel'] = theme('obb_tabbed_carousel',array('tabbed_carousel' => $block->content));
      $tmp = (array)$block;
      
      $variables['carousel'] = render($tmp);
   } 
}
/*
 * ajax callback to load more items
 */
function obb_search_carousel_ajax_load_items($page,$start_index,$tab_index,$result_count,$nid)
{
    $key = $page .":" . $start_index .":".$tab_index.":".$result_count.":".$nid;
    if($cached = cache_get('obb-carousel-ajax-page-load-'.$key, 'cache_obb_search_carousel'))  {
        echo $cached->data; //we render to get js included..optimize ?
        drupal_exit();
    }
    $node = node_load($nid);
    $search_collections = isset($node->field_searches['und']) ? $node->field_searches['und'] : $node->field_searches['field_searches'];
    $ajax_return = "";
    foreach($search_collections as $index => $field_collection_items)
    {
        if($index == $tab_index)
        {
            $search_data = entity_load_single('field_collection_item',$field_collection_items['value']);
            $search_query = $search_data->field_search_query['und'][0]['value'];
            
           $results = obb_search_carousel_get_results($search_query,$page,$start_index,$result_count);
           $rendered_items = array();
           foreach($results['entities'] as $item)
           {
                $rendered_items['items'][] = array(
                  '#type' => 'obb_carousel_item',
                  '#content' => $item,
                );
               
           }
           if(sizeof($rendered_items) != 0)
           {
            $output = '<div class="item">';
            $output .= render($rendered_items);
            $output .= "</div>";
           
            $return = array();

            if($results['extra']['hasmore'] != 0)
            {
                $return['options']['loadMoreUrl'] = "/obb/carousel/ajax/load/".$results['extra']['page']."/".$results['extra']['start_index']."/".$tab_index."/".$result_count."/".$nid;
            }
            else
            {
                $return['options']['loadMoreUrl'] = '';
            }
            $return['items'] = $output;
            $ajax_return = json_encode($return);
           }
           else
           {
               $ajax_return = "";
           }
           break;
           
        }
    }
    cache_set('obb-carousel-ajax-page-load-'.$key, $ajax_return, 'cache_obb_search_carousel', CACHE_PERMANENT); //we manage the these ourself.
    echo $ajax_return;
    drupal_exit();
}
/*
 * Experment
 */
function obb_search_carouselting_object_view_ligth($entity)
{
    $build_array = array();
    $item = new stdClass();
    $item->id =  $entity->title;
    $item->title = $entity->title;
    
}
/*
 * Helper function to build array for carousel.
 */
function obb_search_carousel_build_render_array($search_collections,$nid)
{
   $carousels = array();
   $carousel_settings = obb_carousel_init_settings();
   foreach($search_collections as $tab_index => $field_collection_items)
     {
           $search_data = entity_load_single('field_collection_item',$field_collection_items['value']);
           $search_query = $search_data->field_search_query['und'][0]['value'];
           $results = obb_search_carousel_get_results($search_query,1,0,$carousel_settings['chunk_size'] * variable_get('obb_search_carousel_preload_page_count', 6));
           
            $carousel = array(
             '#type' => 'obb_carousel',
             '#title' => $search_data->field_titel['und'][0]['value'],
             '#items' => $results['entities'],
             
             //'#offset' => $chunk['next_offset'],
             // Add a single placeholder to fetch more content later if there is more
             // content.
             //'#placeholders' => $chunk['next_offset'] > -1 ? TING_SEARCH_CAROUSEL_CHUNK_SIZE + 1 : 0,
           );
           if($results['extra']['hasmore'] != 0)
           {
               $result_count = $carousel_settings['chunk_size'];
               $results['extra']['loadMoreUrl'] = "/obb/carousel/ajax/load/".$results['extra']['page']."/".$results['extra']['start_index']."/".$tab_index."/".$result_count."/".$nid; 
               $carousel['#carousel_options'] = $results['extra'];
           }
           $carousels[] = $carousel;
       }
     $block = new stdClass();
      $block->content = array(
      '#type' => 'obb_tabbed_carousel',
      '#tabs' => $carousels,
      '#transition' => variable_get('ting_search_carousel_transition', 'fade'),
       );
    cache_set('obb-carousel-view-'.$nid, (array)$block, 'cache_obb_search_carousel', REQUEST_TIME + variable_get('ting_object_view_lifetime', TING_DEFAULT_CACHE_LIFETIME)); //we manage the these ourself.
    return $block;
}
/**
 * Implements hook_ctools_plugin_directory().
 */
function obb_search_carousel_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}
function obb_search_carousel_form_alter(&$form, &$form_state, $form_id) {
    if($form_id == 'obb_search_carousel_node_form')
    {
        $form['#submit'][] = "obb_search_carousel_node_save_batch";
    }
}
/*
 * On new carousel creation , batch run the heavy parts before show.
 */
function obb_search_carousel_node_save_batch($form, &$form_state)
{
    $node = $form_state['node'];
    entity_form_submit_build_entity('node', $node, $form, $form_state);
    $node = node_submit($node);
    $node->status = 0;
    node_save($node);
    $batch = array(
      'operations' => array(),
      'title' => t('Bygger søge karousel'),
      'init_message' => t('Begynder opbygning af søge karousel...(Dette kan tage et stykke tid!)'),
      'progress_message' => t('Processed @current out of @total.(Dette kan tage et stykke tid!)'),
      'error_message' => t('Fejlede med at klaregøre søge karousel.'),
    );
    $searches = $node->field_searches['und'];
    foreach($searches as $index => $search)
    {
        $search_data = entity_load_single('field_collection_item',$search['value']);
        $query = $search_data->field_search_query['und'][0]['value'];
        $batch['operations'][] = array(
        'obb_search_carousel_batch_node_pre_search',
        array($node, $query)
      );
        $batch['operations'][] = array(
        'obb_search_carousel_batch_node_preload_ting_view',
        array($node)
      );
    }
    $batch['operations'][] = array(
        'obb_search_carousel_batch_node_preload_publish',
        array($node)
      );
    // Batch set.
    batch_set($batch);
    $goto_url = "/node/". $node->nid;
    unset($_GET['destination']);
    batch_process($goto_url);
}
function obb_search_carousel_batch_node_preload_publish($node)
{
    $node->status =1;
    $num_deleted = db_delete('cache_obb_search_carousel')
      ->condition('cid', 'obb-carousel-view-'.$node->nid)
      ->execute();
    node_save($node);
}
function obb_search_carousel_batch_node_pre_search($node,$search_query,$context)
{
    ini_set('max_execution_time', 600); //300 seconds = 5 minutes
    $context['results']['search'] = obb_search_carousel_get_results($search_query);
}
function obb_search_carousel_batch_node_preload_ting_view($node,$context)
{
    ini_set('max_execution_time', 600); //300 seconds = 5 minutes
    $results = $context['results']['search'];
    $queue = DrupalQueue::get('obb_search_carousel_full_view_mode_cache_queue');
    foreach ($results['entities'] as $entity) {
             //ting_object_view($entity, 'teaser');
             $queue->createItem($entity); //queye the full view for rendering later. for user experiance boost.
             //ting_object_view($entity); //Should we queue this ?
           }
}
/*
 * Create a queue of carousels to be re-rendered
 */
function obb_search_carousel_cron()
{
  $hour = 2; //date('G');
  $old_stamp = strtotime('-18 days');
  if ($hour >= 0 && $hour <= 6) {
      //Get all carousels with cache older then 1 week ?
      $result = db_select('cache_obb_search_carousel', 'c')
        ->fields('c')
        ->condition('created', strtotime('-14 days'),'<')
        ->execute()
        ->fetchAll();
      $queue = DrupalQueue::get('obb_search_carousel_cache_queue');
      foreach($result as $carousel)
      {
          $nid_string = explode('-',$carousel->cid);
          $nid = $nid_string[sizeof($nid_string)-1];
          
          $node = node_load($nid);
          $queue->createItem($node);
      }
  }
}
/**
 * Implement hook cron_queue_info
 * Create a Queue for updating inspiration pages. This way we don't timeout during a long cron job.
 * 
 * @return array
 *  Array declaring the queue.
 */
function obb_search_carousel_cron_queue_info() {
  $queues['obb_search_carousel_cache_queue'] = array(
    'worker callback' => 'obb_search_carousel_cron_rebuild_carousel_worker',
    'time' => 600, //10 minutes..
  );
  $queues['obb_search_carousel_full_view_mode_cache_queue'] = array(
    'worker callback' => 'obb_search_carousel_cron_prebuild_full_entity_worker',
    'time' => 600, //10 minutes..
  );
  return $queues;
}
function obb_search_carousel_cron_prebuild_full_entity_worker($entity) {
    ting_object_view($entity);
}
/**
 * queue worker to rebuild carousels.
 *
 * @param node $node
 *  The inspiration list page.
 * @return array
 *  A array of lightweight of objects with the data needed to show a material on a inspiration list page.
 */
function obb_search_carousel_cron_rebuild_carousel_worker($node) {
    //unpublish carousel while updating.
    $node->status = 0;
    node_save($node);
    
    //clear the cache ( also in redis)
    cache_clear_all('obb-carousel-view-'.$node->nid,'cache_obb_search_carousel');

    
    //start rebuild
    $searches = $node->field_searches['und'];
    obb_search_carousel_build_render_array($searches,$node->nid);
    //republish node
    $node->status = 1;
    node_save($node);
}